@startuml

interface Runnable {

    + run()
}

class ScheduleVisitUI {
    - controller
}

class ScheduleVisitController {

    - repositories
    - authenticationRepository
    - clientRepository
    - scheduleRepository
    - announcementRepository
    + createSchedule()
    + announcementDTOList()
    + getAnnouncementDTO()
    + validateScheduleHour()

}

class Schedule {

    - name
    - phoneNumber
    - announcement
    - day
    - begiHour
    - endHour
    - note
    - status
}
class Repositories {

    + announcementRepository
}

class ScheduleRepository {

    - ScheduleList
    + saveSchedule()
    + validateSchedule()
    + addSchedule()
    + getScheduleList()
    + readObjectScheduleRequest ()
    + writeObjectScheduleRequest ()
}

class AnnouncementRepository {

    + save()
    + createAnnouncement()
    + validateAnnouncement()
    + addAnnouncement()
    + getAllVisibleAnnouncements()
    + getAvailableFields()
    + getAnnouncements()
}

class AnnouncementDTO {

    - price
    - typeOfBusiness
    - property
    - agent
}
class AnnouncementMapper {

    - announcementDTOList
    + convert()
    + toDto()
    + getAllAnnouncements()
    + getAllAnnouncementsRecentToOldest()
    + toDtoAnnouncement()
}


Runnable -left-|> ScheduleVisitUI
ScheduleVisitUI ..> ScheduleVisitController
ScheduleVisitController .right.> Repositories
Repositories .right.> AnnouncementRepository
AnnouncementRepository ..> AnnouncementMapper
AnnouncementMapper --> AnnouncementDTO
ScheduleVisitController ..> ScheduleRepository
ScheduleRepository --> Schedule

@enduml