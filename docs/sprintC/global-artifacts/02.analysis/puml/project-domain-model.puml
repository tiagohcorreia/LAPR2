@startuml
'https://plantuml.com/class-diagram

skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

'skinparam linetype ortho
'left to right direction
skinparam classAttributeIconSize 0
skinparam groupInheritance 1
hide circle
hide methods


Network "1" -- "*" Branch: owns >
Branch "1" -- "*" Announcement: publishes >
Announcement "1" -- "1" Property: contains >

Network "1" -- "*" Employee: employs >


Property <|-- House
Property <|-- Apartment
Property <|-- Land


"System Administrator" --|> Employee
"Network Manager" --|> Employee
"Store Manager" --|> Employee
Agent --|> Employee

Employee "1" - "1" Branch: works at a >

"System Administrator" "1" ----> "*" Employee: registers >
"System Administrator" "1" ---> "*" Branch: registers >


"System Administrator" "1" --> "*" State: specifies >
"System Administrator" "1" -> "*" District: specifies >
"System Administrator" "1" -> "*" City: specifies >


together {
Buyer --|> Client
Seller --|> Client
}

Seller "1" - "*" Property: owns >
Seller "1" - "*" Announcement: creates >
Agent "1" - "*" Announcement: validates >
Visit "1" - "1" Buyer: requests <
Buyer "1" - "*" Announcement: browses >
Visit "1" --- "1" Agent: scheduled by >

together {
Property "1" - "1" City: located in >
District "1" - "*" City: located in <
State "1" - "*" District: located in <
}


class Network{

}

class Branch{
name:String
address:String
email:String
phoneNumber:String
}

class Employee{
String name
int cCNumber
int taxNumber
String address
String email
String phoneNumber
}

together {
class "System Administrator"

class "Network Manager"

class "Store Manager"

class Agent
}

class Client
class Buyer
class Seller

class Visit{

}

class Announcement{
int listingID
bool visible
float price
float commission
TypeOfBusiness typeOfBusiness
}


class Property{
float area
City city
float cityCenterDistance
List<Image> photograph
}

class House{
int numberOfBedrooms
int numberOfBathrooms
int numberOfParkingSpaces
List<String> equipment
bool hasBasement

bool hasInhabitableLoft
SunExposure sunExposure
}

class Apartment{
int numberOfBedrooms
int numberOfBathrooms
int numberOfParkingSpaces
List<String> equipment
}

class Land{
}

class State{
String name
}
class District{
String name
}
class City{
String name
}



@enduml